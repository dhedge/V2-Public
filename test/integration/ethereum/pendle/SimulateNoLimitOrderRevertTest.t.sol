// SPDX-License-Identifier: MIT
pragma solidity 0.7.6;
pragma abicoder v2;

import {Test} from "forge-std/Test.sol";
import {PoolLogic} from "contracts/PoolLogic.sol";
import {Governance} from "contracts/Governance.sol";
import {PendlePTAssetGuard} from "contracts/guards/assetGuards/pendle/PendlePTAssetGuard.sol";
import {PendleRouterV4ContractGuard} from "contracts/guards/contractGuards/pendle/PendleRouterV4ContractGuard.sol";
import {EthereumConfig} from "test/integration/utils/foundry/config/EthereumConfig.sol";

contract SimulateNoLimitOrderRevertTest is Test {
  address public owner = 0x5a76f841bFe5182f04bf511fC0Ecf88C27189FCB;
  Governance public governance = Governance(0xFa2837ecaC0136f7dE9221DB2b13fe9192De4BD2);
  address public USDy = 0xAD0FCdB111705C9FDceAa4F92a5c0B43243FF0bd;
  address public USDyManager = 0x25ca6760fC0936127a6E34c3CBD63064b8A0DE1f;
  address public PT = 0x9F56094C450763769BA0EA9Fe2876070c0fD5F77;
  uint256 public minPTAmountOut = 599164693965679848389319;

  function setUp() public {
    // https://dashboard.tenderly.co/dHEDGE/testing/tx/0xebaed35fbef3acb9c2226de865d1a6eb86e4fe3deeb4becc4b6cb86770969a56
    vm.createSelectFork("ethereum", 22876435);
  }

  function test_simulate_no_limit_order_revert_on_500k_susde() public {
    vm.expectRevert("no limit order");
    _execSwapExactTokenForPt();
  }

  function test_simulate_transactions_passes_on_500k_susde() public {
    address[] memory knownPendleMarkets = new address[](1);
    knownPendleMarkets[0] = EthereumConfig.PENDLE_MARKET_sUSDe_SEP_2025;
    PendlePTAssetGuard pendlePTAssetGuard = new PendlePTAssetGuard(
      EthereumConfig.PENDLE_MARKET_FACTORY,
      knownPendleMarkets
    );

    PendleRouterV4ContractGuard newGuard = new PendleRouterV4ContractGuard(
      EthereumConfig.SLIPPAGE_ACCUMULATOR_PROD,
      EthereumConfig.POOL_FACTORY_PROD
    );

    vm.startPrank(owner);
    governance.setContractGuard(EthereumConfig.PENDLE_ROUTER_V4, address(newGuard));
    governance.setAssetGuard(37, address(pendlePTAssetGuard));

    uint256 ptBalanceBefore = PoolLogic(PT).balanceOf(USDy);
    assertEq(ptBalanceBefore, 0);

    _execSwapExactTokenForPt();

    uint256 ptBalanceAfter = PoolLogic(PT).balanceOf(USDy);
    assertGe(ptBalanceAfter, minPTAmountOut);
  }

  function _execSwapExactTokenForPt() internal {
    vm.startPrank(USDyManager);
    PoolLogic(USDy).execTransaction(
      EthereumConfig.PENDLE_ROUTER_V4,
      hex"c81f847a000000000000000000000000ad0fcdb111705c9fdceaa4f92a5c0b43243ff0bd000000000000000000000000a36b60a14a1a5247912584768c6e53e1a269a9f7000000000000000000000000000000000000000000007ee0c87c1b2f0e1cfac70000000000000000000000000000000000000000000000a261ac5cb5e1e3d30e000000000000000000000000000000000000000000007ec139caa7bbbcfd798a000000000000000000000000000000000000000000000144c358b96bc3c7a61c000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000009184e72a000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000002800000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a34970000000000000000000000000000000000000000000069e10de76676d08000000000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c9b3e2c3ec88b1b4c0cd853f4321000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000001992d1f352980190be118359fe043d786358b87e79baefca230db1f1987d6cdbfddfaf39f371666a7d30000000000000000000000000000000000000000000000000000000068712167000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000009d39a5de30e57443bff2a8307a4256c8797a3497000000000000000000000000029d6247adb0a57138c62e3019c92d3dfc9c18400000000000000000000000006ed3c871ac6aae698a9d6e547a5f54873b091e180000000000000000000000006ed3c871ac6aae698a9d6e547a5f54873b091e1800000000000000000000000000000000000000000000043c33c193756480000000000000000000000000000000000000000000000000000000fafb1b77be97350000000000000000000000000000000000000000000000000c7d713b49da0000000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041da8a7edb31aa7c0837753ffd6ff87173bd79e50be05ba1b74b009c0c33f028720ba989e5e1946d0a4ee84b447b1e904c4742a604a40e83cf9579c41a68aeb7f71b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    );
  }
}
