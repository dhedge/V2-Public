{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x0C0a10C9785a73018077dBC74B2A006695849252",
    "txHash": "0x5988644ae4e1e4b4499a10396ce3a06fc5f3b9dd6ba108ab03b86607aa1ff340"
  },
  "proxies": [
    {
      "address": "0x51fa919043596E057C4aF40A98bCb6163acC2AfD",
      "txHash": "0xac1c4c3cf641aa63e84b77c0a6ad875374d6dcb9268259bfe09b33c4a5f59157",
      "kind": "transparent"
    },
    {
      "address": "0xDBc63272f1756aDE4DC98ED80EFA4A2d420AD28F",
      "txHash": "0xe80fc8d98c384c3f055ef8adbbf6d95c2d3647d10d14ee637e32daa5514227c0",
      "kind": "transparent"
    },
    {
      "address": "0xC6d2591b4E5753B65cdF8752803f348667F2aAC8",
      "txHash": "0x17d5b6f26577a3801f7686f7d9c2ccd3c1b373eb22e7faea9ad03a6fce764aae",
      "kind": "transparent"
    },
    {
      "address": "0x46d2c7982F81c008DC83e97C7832662FB4F1e71e",
      "txHash": "0x0250985b4bb19c44fe7ed6fd7eeec6604cba9c9cb2d05d677c4a79e0d82bed21",
      "kind": "transparent"
    },
    {
      "address": "0x866Af213A80dD88f10690d4C67b8812AcDdf0A51",
      "txHash": "0x9018a70c2ce70b5cc084ff3202335dc4ab006eaf6dd93ef0e99dcd454375c294",
      "kind": "transparent"
    },
    {
      "address": "0x506434a4D7493b11C6a004B84Eb5b61863fDe0A4",
      "txHash": "0x0fd04b9edec2fbba806ac8fba6ffcff27d1a2cf6bf6531f27911a847887b208e",
      "kind": "transparent"
    },
    {
      "address": "0x3F7174cc5524FF4d2F28763ce1Df36173Fd0B326",
      "txHash": "0xc2e6c00481d991244a15723ef5ace8afe92beee999ba4399234583cc613b3cfa",
      "kind": "transparent"
    },
    {
      "address": "0x8F0Fe4A89f5550b486dAE5276Ea875d625f30e09",
      "txHash": "0x9d5c4db7b48367008cbc89613e792a5b227411f97391148ec3a6e0ab0bf19f36",
      "kind": "transparent"
    },
    {
      "address": "0xe4da1F7Cc4F3f511A77ece5823E7F44f4C0aD180",
      "txHash": "0x8f6ee69d35d2a77682a6d4b44532422b921d7c15a8c39ee4be181d5234865734",
      "kind": "transparent"
    },
    {
      "address": "0x4e86b7555dB05FEA5A5bc1f9d2e9Df3EAc3E5112",
      "txHash": "0x9d98653a42ef2bcbd85f8b48dc7da19ca206d3e4396fd33ed20ca459d450ca68",
      "kind": "transparent"
    },
    {
      "address": "0x816Ba3a9Dfc85B031c21a51093Fa70a6A554556d",
      "txHash": "0x58ade300047d5c49664cdbd9b683ca38f822469ebb2321c5f235a3f33f37b89f",
      "kind": "transparent"
    },
    {
      "address": "0xc16E5dbfe74C0c30FeA2a8eCA6e1832F51E2A9B2",
      "txHash": "0x94373c2c17db78ba90bb5b3145878015b08f89bf767292d0861061468f381c6e",
      "kind": "transparent"
    },
    {
      "address": "0x72b8CCE4bE8EfDC50e493cB210f9b9Eb15033453",
      "txHash": "0xfafb82ea328d7e9a42e87fafddf3ccb61fc6e643dda807f682ef392bfe39ba9c",
      "kind": "transparent"
    },
    {
      "address": "0x17077A224160d110B947CDa1da11010E74Cf59b4",
      "txHash": "0xa1e1b3b6c9c04ca1d69ddb3718f90b26986f0ba36fe9c88b614ee3d868940911",
      "kind": "transparent"
    },
    {
      "address": "0xeA6cD3d4C65736Af8378341b2Dd6FD1d0B515b9B",
      "txHash": "0x6740ac7dee595b94ab3162886a5142ecacb6c1ffde07b81d864cf2e895ab9a0a",
      "kind": "transparent"
    },
    {
      "address": "0x760FE3179c8491f4b75b21A81F3eE4a5D616A28a",
      "txHash": "0x862e1c5142c5f0827d513ad8ae835fd2f91f04184a6bd8c2c450bb6b6bd72e1d",
      "kind": "transparent"
    },
    {
      "address": "0xfdc7b8bFe0DD3513Cc669bB8d601Cb83e2F69cB0",
      "txHash": "0x402b0000abd36c9e0ddc49482047927a9f6ee8f4b55ea9c52aeadaea8c576ecc",
      "kind": "transparent"
    },
    {
      "address": "0xdc490C84bCEBf445fFd4eAc895FC213FA7CD6f6d",
      "txHash": "0xc76342a0390e976791301f6f35ab483c9dab7b6744307d83c3afeece2166243d",
      "kind": "transparent"
    },
    {
      "address": "0xDd87eCdB10cFF7004276AAbAbd30e7a08F69bb53",
      "txHash": "0x5707f04d8e605af9bb7f79ebbb37881c89e9fa1843658e864e95c206872be819",
      "kind": "transparent"
    },
    {
      "address": "0xd3adaC91958322B2e287940aD1d77bAA86c5f1ea",
      "txHash": "0x27fcfa432b8c1e8b04bf12cdb9f18c2819f6b6455cd10e69331a4f5dacaa603d",
      "kind": "transparent"
    },
    {
      "address": "0xd1deB63DE0c659104e955d8478F7523182B3F3DD",
      "txHash": "0xd6cb7178f305452ad29ea90a01d390468c73f54a17fbd0872a558a45495ff89d",
      "kind": "transparent"
    },
    {
      "address": "0xabD44A7baA775159b6ab6a47D85c223D49fbb358",
      "txHash": "0xf82f269df0a0e12302aa2ed40f59b2412d7df85813d21f925deb0af9927c6698",
      "kind": "transparent"
    },
    {
      "address": "0x096394c1c4228c159C727170f71f365fFD15E648",
      "txHash": "0x5ce2e12bc90362f8b8df8c97a8dfc63ad02da57e7caf888b79f145f305ce347e",
      "kind": "transparent"
    },
    {
      "address": "0xD5E2AB7b8BdCAE7Bfd6778A32773661a1Ff9BbD4",
      "txHash": "0x10f5f95eccf00ed25310c8ec2fbc205e1fd5df15f638fdbc87b4e0b57cc64dff",
      "kind": "transparent"
    },
    {
      "address": "0x6379eE50f5974307CcFaC3ba22F6BbFb03654c41",
      "txHash": "0x2ef181c1ba7cb90b6b58ff3808a136f9a024005ccfba4f415d3474111a6628c7",
      "kind": "transparent"
    },
    {
      "address": "0x3786D3b24c2d98dE7C639E92664283a02690F0F4",
      "txHash": "0x3299fa01b44d249e21db58a5f8aa9b2bbd87ee1a29582fdcbb2e322266c4d294",
      "kind": "transparent"
    },
    {
      "address": "0x1f6B6E2eD845d9EC7c346fa28d66c48265108870",
      "txHash": "0x64d78f315e3e20180fe515bb947a7415a5fdde9916439a5ad3190679e401aa1d",
      "kind": "transparent"
    },
    {
      "address": "0x243e92C76614E59F81837178CE74c72EDee5A041",
      "txHash": "0xbadbf5810b7cc6ed82f464c447520d4120e14ce0ad6a0621b5cd86ab8af48f07",
      "kind": "transparent"
    },
    {
      "address": "0x54aBc5d37261f00d6e5483f8b0b364936DcA345d",
      "txHash": "0x5d8f2688ecd6e0c04d524ff34376c32009960ea05834c0705cf16e771d3253ff",
      "kind": "transparent"
    },
    {
      "address": "0xfBa63e639F1F509a2e8831A37D4D9ee1db0Bf269",
      "txHash": "0x0db09d3ff17b38542b03b8faf3d3247e59f73bd3f6debaf9e025e9c8cfa6059e",
      "kind": "transparent"
    },
    {
      "address": "0xE749cD67F9e6727b868bB2480195ee301aA4BA33",
      "txHash": "0x768791201005dc4538ff6247d787af8401faf57bb624816d74d05c5059b531bb",
      "kind": "transparent"
    },
    {
      "address": "0x273110D9ffB1F9cB08d46AAEF64290ED6B4132E4",
      "txHash": "0xfa4483a82d2d7bacaff023b89f530ff7eaf480337ea2f7d151f3278e88c4bfd4",
      "kind": "transparent"
    },
    {
      "address": "0x0c0588E6515E804918740d6c622d768c84D5d39D",
      "txHash": "0xd2db4f85d58bd6cf1e23a79b12f7c888bb749d6d068f0cf6ba3654a5427e00e2",
      "kind": "transparent"
    },
    {
      "address": "0x2Da99149E234e92da1c6D5d466D145D71b6dF86f",
      "txHash": "0xd4c5ebf146066fdb320785b73dfc595eab8ae3787df16923e2695962d7932c18",
      "kind": "transparent"
    },
    {
      "address": "0x62073D8A8b382f37342e595ACA23bC867C8Ea81e",
      "txHash": "0xed0408ab3751072f837b12873fa97be40f67e6509b788ccc746f68d74f91d4e9",
      "kind": "transparent"
    },
    {
      "address": "0x025bB4319dAB451360f4Fb34F567785d4cF73c2F",
      "txHash": "0x65787ed642969d0fc3f7dd684dfa7a3e782779375984aa32ee99855b9a738b51",
      "kind": "transparent"
    },
    {
      "address": "0x0d7b2114dF22A954868a89b28D6f868114f3c285",
      "txHash": "0x418733509e3914edd3922b523f0ad606ebcd89a3193455a88db7782d643ec415",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0dc95670e425539c0574fd0d3a6097cafa7a53780a09a7afcc078d61f7f839d5": {
      "address": "0xd5c50a0f03e59b3a042eEc9F3858b7DC429Ef503",
      "txHash": "0x72c018c0272576a7f76c5634e22357d67c42048f5c45685eb62370134d9d41ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:44"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:46"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:97"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:86"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:88"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:89"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:90"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:91"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:93"
          },
          {
            "contract": "PoolFactory",
            "label": "isPoolManager",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:94"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:96"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:97"
          },
          {
            "contract": "PoolFactory",
            "label": "poolManagerFeeNumerator",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:98"
          },
          {
            "contract": "PoolFactory",
            "label": "poolManagerFeeDenominator",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:99"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:101"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:103"
          },
          {
            "contract": "PoolFactory",
            "label": "_trackingCode",
            "type": "t_bytes32",
            "src": "contracts/PoolFactory.sol:105"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:107"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:108"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:110"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "contractGuards",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "assetGuards",
            "type": "t_mapping(t_uint8,t_address)",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/PoolFactory.sol:466"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint8,t_address)": {
            "label": "mapping(uint8 => address)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "b5273a626ae7272413fa2939a070f666d38ae1fda45075e915e9cc34ac479145": {
      "address": "0x6f68768f4307803F50D7F303d8d58Be24E6aD493",
      "txHash": "0xbc0810329dc75c748d696a7564db950c87b47e32991d01018492dab560c34182",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AssetHandler",
            "label": "chainlinkTimeout",
            "type": "t_uint256",
            "src": "contracts/assets/AssetHandler.sol:26"
          },
          {
            "contract": "AssetHandler",
            "label": "poolFactory",
            "type": "t_address",
            "src": "contracts/assets/AssetHandler.sol:27"
          },
          {
            "contract": "AssetHandler",
            "label": "assetTypes",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "contracts/assets/AssetHandler.sol:30"
          },
          {
            "contract": "AssetHandler",
            "label": "priceAggregators",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/assets/AssetHandler.sol:31"
          },
          {
            "contract": "AssetHandler",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/assets/AssetHandler.sol:120"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "605cd0736efe4d87cc44870b4e0cc9043b6f927ae72affc18be40a5b2f69a1c8": {
      "address": "0xd7Ce1cA2A7D8fAd3bbED75E73739D8A5c3C287c9",
      "txHash": "0x19511e491fd83b409631d24e95a9db72b7798692e1e220e7d5059a5bda422d4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AssetHandler",
            "label": "chainlinkTimeout",
            "type": "t_uint256",
            "src": "contracts/assets/AssetHandler.sol:27"
          },
          {
            "contract": "AssetHandler",
            "label": "assetTypes",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/assets/AssetHandler.sol:30"
          },
          {
            "contract": "AssetHandler",
            "label": "priceAggregators",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/assets/AssetHandler.sol:31"
          },
          {
            "contract": "AssetHandler",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/assets/AssetHandler.sol:116"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ab93cdcf0a921f478e9120dcce8303fc93524897bab4984bd1aa1e5de3c4cf87": {
      "address": "0xB68BEd0A2420066B8011706EA7E6F8Bb6DED4397",
      "txHash": "0x139f97a30458ac27837f81852f3e7e13dbbd7a6d2a3434b75b9a366301ce5537",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:44"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:46"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:99"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:102"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:104"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:105"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:107"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:108"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:109"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "isPoolManager",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "poolManagerFeeNumerator",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:116"
          },
          {
            "contract": "PoolFactory",
            "label": "poolManagerFeeDenominator",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "_trackingCode",
            "type": "t_bytes32",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/PoolFactory.sol:487"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "29a2b91b536a50404519a0f5c23fbc5f584de8592bab24f52f2032b82288fdaa": {
      "address": "0x53d5b36f154a22Ef89ff2DfdAFA67AfE090B9d6E",
      "txHash": "0xcce17f8fb46b2587d3d29d8a1571771003d73bff59e898ffdf9542e4ae245883",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AssetHandler",
            "label": "chainlinkTimeout",
            "type": "t_uint256",
            "src": "contracts/assets/AssetHandler.sol:29"
          },
          {
            "contract": "AssetHandler",
            "label": "assetTypes",
            "type": "t_mapping(t_address,t_uint16)",
            "src": "contracts/assets/AssetHandler.sol:32"
          },
          {
            "contract": "AssetHandler",
            "label": "priceAggregators",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/assets/AssetHandler.sol:33"
          },
          {
            "contract": "AssetHandler",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/assets/AssetHandler.sol:125"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint16)": {
            "label": "mapping(address => uint16)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8416bddfa4034759ba18e9751305aff46a5ed1b5f4c967cd9ec845f4082dc65b": {
      "address": "0x979A12e31E34adF7D4E5281eCA878c0f7956a909",
      "txHash": "0xe8371fc0bd2e2425ac059863fa9d5a44e46cef929933d3b9de0ef43a671aed31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:44"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:46"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:99"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:106"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:108"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:109"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:113"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "isPoolManager",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:116"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/PoolFactory.sol:503"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "1f7064985ce6e24151876ed3e997708dc2027fbcba10377a4c854bdcdca71b63": {
      "address": "0x13E1c2d49dB12F97becAbEe57d1308fBdD365D42",
      "txHash": "0x760ac11b65aef88cd48a83b65e856c7a591ddf711c9a9dc7b4d4c6bd00ceeb33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:44"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:46"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:99"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:106"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:108"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:109"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:113"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/PoolFactory.sol:498"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "07dfa7bddbbe3ae309189188c100cc32e5f529ac216297238747ca350fc30c93": {
      "address": "0x8cfe80464d02e29e0c959Df9f6efBd2317Bc9ce1",
      "txHash": "0xdb9e66f178f0bff92c59f35234a359c98e204dfae06e414ffe82245e8b38fd91",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:110"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:104"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:106"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:107"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:109"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:110"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:111"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:113"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:115"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:116"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:118"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:120"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:122"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:123"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:125"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:126"
          },
          {
            "contract": "PoolFactoryV24",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/v2.4.1/PoolFactoryV24.sol:584"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "91d25fef3e59418294ebaf6f88193f204081af94d1982c5a2929152d87f9878b": {
      "address": "0xaE0308F32300001d158Fe4E133592ddc1947a2dE",
      "txHash": "0x2ed0ca11ff32f02a9fb1142fb3753a021534c5869794a8be99fdf511ea6cafe0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:110"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:108"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:110"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:113"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/PoolFactory.sol:580"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "64515c211800d77ffab6b7f09375ada1544a92f8838b0346bb0271775b62eba5": {
      "address": "0x451024781348393EC89c02E8Fc347E19ed3cf4Da",
      "txHash": "0x9f1ec6ce7a8b1701169a6f93e16d4ea7ffecd1839f474f3bb49434917f3df5b5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts\\PoolLogic.sol:123"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:124"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:126"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:128"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:131"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolLogic.sol:133"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:135"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "63e0c24bf21867abbadd54bf9b93e553e60940074473de632e8c74a11d9ec54c": {
      "address": "0xa1A104211B595834093C2b039334F3633B58a111",
      "txHash": "0x37c085ec32b0a61a62f79775081ae615d91767e1db00cbc273a2ddd8b8134c7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Managed.sol:44"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts\\Managed.sol:45"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts\\Managed.sol:50"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolManagerLogic.sol:69"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts\\PoolManagerLogic.sol:70"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)14746_storage)dyn_storage",
            "src": "contracts\\PoolManagerLogic.sol:72"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolManagerLogic.sol:73"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:76"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:77"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:78"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)14746_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)14746_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)51_storage": {
            "label": "uint256[51]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "14447dbdcd9b06b2afa70d82832b6bcd918e7946fe985692eb02287c88a827dc": {
      "address": "0x5B5E10c98c19Bd568facF05052d1136bB4ECEF61",
      "txHash": "0xfbb979d0fab79b474ca1be263031418bbbe5c6f7e3f57a5d2e7eb36dd6de3cd1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts\\upgradability\\ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\upgradability\\ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\upgradability\\ProxyFactory.sol:110"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\PoolFactory.sol:108"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:110"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:113"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:120"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:122"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:124"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolFactory.sol:126"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:130"
          },
          {
            "contract": "PoolFactory",
            "label": "poolPerformanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts\\PoolFactory.sol:582"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "44c80ec8f5f8cba9b01a09d1b10c0ede34e1bc34917e4c77f15f92c3264a1ee0": {
      "address": "0xE9F6C94567906947d781C059e64c3C1DA95FdBd7",
      "txHash": "0xa13c5f6c399fe3b086fe9eef21361163af1f9899931d2cc979aeb64b0cd90f2b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts/PoolLogic.sol:126"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:127"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:129"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:131"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:134"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:136"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:138"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "4a159df5b894a1cdba09a976fe7f9aeda2490243af2e7b09151dcdcecf7ae66c": {
      "address": "0x3dB16dBf76b5edFF977A0b2F5e6f412238748B7b",
      "txHash": "0x5f8125c4aeaf1357ef0d14b862fb152f29b3f5c6451625ea0b1529eeeeaec0e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts/Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts/Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:70"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:71"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)15967_storage)dyn_storage",
            "src": "contracts/PoolManagerLogic.sol:73"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolManagerLogic.sol:74"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:77"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:78"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:79"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)15967_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)15967_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)51_storage": {
            "label": "uint256[51]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "881d17bdd6c5f851a3dd811bbffa9befc5db9d0dd8698479f18b5891853c5661": {
      "address": "0x38555F7DC51aB3Ba20C90d39B80fa99bce4aA156",
      "txHash": "0xc1dc33c58c54da80f6c29712b75fc6bde67810691be7e25e9b73c31d9bbac0fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts\\upgradability\\ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\upgradability\\ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\upgradability\\ProxyFactory.sol:110"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:124"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:126"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:128"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolFactory.sol:130"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:131"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:133"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:134"
          },
          {
            "contract": "PoolFactory",
            "label": "poolPerformanceAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:137"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:138"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeDenominator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:139"
          },
          {
            "contract": "PoolFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "contracts\\PoolFactory.sol:660"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c78bbaed4e2d1be901b5736def098e0bf7fb49ba2574196a13a87172ca3a24a5": {
      "address": "0xBA6AE6Def9c94e25B67176d2B6C32F7863968fbe",
      "txHash": "0x9eb6c465dc39f2c92ea1270eb5b1d04076d2209feb687e10158704ce7aaf74c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts\\PoolLogic.sol:130"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:131"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:133"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:135"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:138"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolLogic.sol:140"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:142"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "26d49f92d87012d81d130c54522ae8abcb54c5416523a60df07c91d8787123a1": {
      "address": "0x330846B9eA0eb13Fe874aBcc872dC77fA99D56d5",
      "txHash": "0x8af6e3df0c493a994f39b2af7bfbaaddb8203896b366644ce49698bfcec25604",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts\\Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts\\Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolManagerLogic.sol:70"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts\\PoolManagerLogic.sol:71"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)19662_storage)dyn_storage",
            "src": "contracts\\PoolManagerLogic.sol:73"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolManagerLogic.sol:74"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:77"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:78"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:79"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)19662_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)19662_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)51_storage": {
            "label": "uint256[51]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "133bec7086047f9142f8e0a78da49204952aa550b46f2eaca741213c1dbc8d76": {
      "address": "0xAB5629A97C4Daaf3D59Ba682CF8a46f11ddC44EC",
      "txHash": "0xa675c8e06748d36132fa4ef3f6492aa71c09666a82eb647ef1e996faca0af735",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\PoolPerformance.sol:71"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolPerformance.sol:75"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a033b309e822dc421bc93563944aee91138f2800d08d1e35e71dd6e3ae45e775": {
      "address": "0x7158d5b824C38dC0115C16FaCE68dE26330EF50D",
      "txHash": "0x19d7c1a49616785452eac93ba04100e2187e2f97252a14b9cfaf3ed04ec62169",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "poolInitialized",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolPerformance.sol:71"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/PoolPerformance.sol:72"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolPerformance.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "71a4e9ed22effd2d447d8c673dcb9e57ffc45977293cf096220dcddf785506cc": {
      "address": "0x688466E9a38277cd3494F2606f4950EAfb374462",
      "txHash": "0xe85beb5fae6a72b6e61a4ada48d09c3fcdfe5e6b5e5504960974f72387508393",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "poolInitialized",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolPerformance.sol:71"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/PoolPerformance.sol:72"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolPerformance.sol:76"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1592261d818b231bb795d5764dab711935654593641678db3f39cd2214d4da49": {
      "address": "0x16cb10B7147B605e58d5495DFc563F9404Ed448F",
      "txHash": "0x2618c34094bf831ce44cd3bc974c5d8f4d236aa17aa467f82e1bbfc9e12a6a7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DynamicBonds",
            "label": "depositToken",
            "type": "t_address",
            "src": "contracts\\DynamicBonds.sol:76"
          },
          {
            "contract": "DynamicBonds",
            "label": "payoutToken",
            "type": "t_address",
            "src": "contracts\\DynamicBonds.sol:77"
          },
          {
            "contract": "DynamicBonds",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\DynamicBonds.sol:78"
          },
          {
            "contract": "DynamicBonds",
            "label": "depositTotal",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:79"
          },
          {
            "contract": "DynamicBonds",
            "label": "debtTotal",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:80"
          },
          {
            "contract": "DynamicBonds",
            "label": "bondNumber",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:81"
          },
          {
            "contract": "DynamicBonds",
            "label": "bondTerms",
            "type": "t_struct(BondTerms)5180_storage",
            "src": "contracts\\DynamicBonds.sol:83"
          },
          {
            "contract": "DynamicBonds",
            "label": "bonds",
            "type": "t_mapping(t_uint256,t_struct(Bond)5191_storage)",
            "src": "contracts\\DynamicBonds.sol:84"
          },
          {
            "contract": "DynamicBonds",
            "label": "userBonds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\DynamicBonds.sol:85"
          },
          {
            "contract": "DynamicBonds",
            "label": "minBondPrice",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:87"
          },
          {
            "contract": "DynamicBonds",
            "label": "maxPayoutAvailable",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:88"
          },
          {
            "contract": "DynamicBonds",
            "label": "_payoutTokenUnit",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(BondTerms)5180_storage": {
            "label": "struct DynamicBonds.BondTerms",
            "members": [
              {
                "label": "payoutAvailable",
                "type": "t_uint256"
              },
              {
                "label": "expiryTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "bondOptions",
                "type": "t_array(t_struct(BondOption)5172_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(BondOption)5172_storage)dyn_storage": {
            "label": "struct DynamicBonds.BondOption[]"
          },
          "t_struct(BondOption)5172_storage": {
            "label": "struct DynamicBonds.BondOption",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Bond)5191_storage)": {
            "label": "mapping(uint256 => struct DynamicBonds.Bond)"
          },
          "t_struct(Bond)5191_storage": {
            "label": "struct DynamicBonds.Bond",
            "members": [
              {
                "label": "bondOwner",
                "type": "t_address"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "bondOption",
                "type": "t_struct(BondOption)5172_storage"
              },
              {
                "label": "lockStartedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7478221995b96162482c243f5884798aaf7f864c1520ce74dff6a037719b61f3": {
      "address": "0xe38d6B375B9ed2fCEB6Edf1D64176A7E1A549410",
      "txHash": "0xedf0d51cefe01d9b67cc9f04507fe97b0fb6ece15fda1b4099d8795236393aab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts\\PoolLogic.sol:131"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:132"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:134"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:136"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:139"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\PoolLogic.sol:759"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "6a5c8325dedd8c1d1803b9679546f5fbe46536275b4572d8ccbe5d1d77fd953e": {
      "address": "0x3cCD3B47C32d621C8C7E3f66a6D7d763E0BDc341",
      "txHash": "0x7c59f31e003292317072f08969dfd4b0b92173d7ecd8b7c44373ae00472f06ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts\\Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts\\Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts\\Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolManagerLogic.sol:70"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts\\PoolManagerLogic.sol:71"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)20319_storage)dyn_storage",
            "src": "contracts\\PoolManagerLogic.sol:73"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolManagerLogic.sol:74"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:77"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:78"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolManagerLogic.sol:79"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)20319_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)20319_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)51_storage": {
            "label": "uint256[51]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "dd71abce311e2526e8953fff5457f85af598bf1ffc1ea060747d906c5c73e377": {
      "address": "0x0a7AA4D9bf1e88240B752F965E793210Cb9fD722",
      "txHash": "0xabcde11c84591b786dd502490222f965b066e62dff11953c474027da7646d9ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "poolInitialized",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolPerformance.sol:71"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/PoolPerformance.sol:72"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolPerformance.sol:76"
          },
          {
            "contract": "PoolPerformance",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/PoolPerformance.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4baff9cfd3e04131a4c60f02d837fd4490020ce092e90dcc10076369f860e3a7": {
      "address": "0x8f101554017fa5D93b00eb01Ca958f2c6224F84e",
      "txHash": "0x4c65f7054e57740ea6e7ade5e366aa85ae83678b6968a2bcf387267991417b61",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DHedgePoolPriceOracle",
            "label": "poolAddress",
            "type": "t_address",
            "src": "contracts/DHedgePoolPriceOracle.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "56f417af7d1ddafec96635d350a0cabe1b0fbe8da906b6f23ed5883286cce09c": {
      "address": "0x878727A822083C27f1FDA629aCA7d70139fA01Bf",
      "txHash": "0xc36a9687f196c730f03a04604ecafbf7d423f50cc74db88c6c5f07e3bc007083",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "DHedgePoolPriceOracle",
            "label": "poolAddress",
            "type": "t_address",
            "src": "contracts/oracles/DHedgePoolPriceOracle.sol:48"
          },
          {
            "contract": "DHedgePoolPriceOracle",
            "label": "decimals",
            "type": "t_uint8",
            "src": "contracts/oracles/DHedgePoolPriceOracle.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5f13fbc1ed07e734b5c9057971f1a927d4c3a28dd3250d6e167f22045070c0bf": {
      "address": "0x04965F01E531311f1686BE8D6904E9A361191749",
      "txHash": "0xbfbf23de24d638bc0eced930738278d39de03665df44483ba0d00f99c1af3fa3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "DynamicBonds",
            "label": "depositToken",
            "type": "t_address",
            "src": "contracts\\DynamicBonds.sol:85"
          },
          {
            "contract": "DynamicBonds",
            "label": "payoutToken",
            "type": "t_address",
            "src": "contracts\\DynamicBonds.sol:86"
          },
          {
            "contract": "DynamicBonds",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\DynamicBonds.sol:87"
          },
          {
            "contract": "DynamicBonds",
            "label": "depositTotal",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:88"
          },
          {
            "contract": "DynamicBonds",
            "label": "debtTotal",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:89"
          },
          {
            "contract": "DynamicBonds",
            "label": "bondNumber",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:90"
          },
          {
            "contract": "DynamicBonds",
            "label": "bondTerms",
            "type": "t_struct(BondTerms)1026_storage",
            "src": "contracts\\DynamicBonds.sol:92"
          },
          {
            "contract": "DynamicBonds",
            "label": "bonds",
            "type": "t_mapping(t_uint256,t_struct(Bond)1037_storage)",
            "src": "contracts\\DynamicBonds.sol:93"
          },
          {
            "contract": "DynamicBonds",
            "label": "userBonds",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\DynamicBonds.sol:94"
          },
          {
            "contract": "DynamicBonds",
            "label": "minBondPrice",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:96"
          },
          {
            "contract": "DynamicBonds",
            "label": "maxPayoutAvailable",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:97"
          },
          {
            "contract": "DynamicBonds",
            "label": "_payoutTokenUnit",
            "type": "t_uint256",
            "src": "contracts\\DynamicBonds.sol:99"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(BondTerms)1026_storage": {
            "label": "struct DynamicBonds.BondTerms",
            "members": [
              {
                "label": "payoutAvailable",
                "type": "t_uint256"
              },
              {
                "label": "expiryTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "bondOptions",
                "type": "t_array(t_struct(BondOption)1018_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(BondOption)1018_storage)dyn_storage": {
            "label": "struct DynamicBonds.BondOption[]"
          },
          "t_struct(BondOption)1018_storage": {
            "label": "struct DynamicBonds.BondOption",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "lockPeriod",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Bond)1037_storage)": {
            "label": "mapping(uint256 => struct DynamicBonds.Bond)"
          },
          "t_struct(Bond)1037_storage": {
            "label": "struct DynamicBonds.Bond",
            "members": [
              {
                "label": "bondOwner",
                "type": "t_address"
              },
              {
                "label": "lockAmount",
                "type": "t_uint256"
              },
              {
                "label": "bondOption",
                "type": "t_struct(BondOption)1018_storage"
              },
              {
                "label": "lockStartedAt",
                "type": "t_uint256"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "706de0125915d1db4d323fe7a68d05a7b8f6b742959b976b3e146c13b38ac046": {
      "address": "0x3C2E02E012d3D0cBf3F4391A71e0E27Fe8c7a192",
      "txHash": "0x1c152a5be3aacedf685eacf3500a304d2c348b9dad1551959258b0bc0c9796e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts\\upgradability\\ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\upgradability\\ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\upgradability\\ProxyFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolFactory.sol:131"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:132"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:134"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:135"
          },
          {
            "contract": "PoolFactory",
            "label": "poolPerformanceAddress",
            "type": "t_address",
            "src": "contracts\\PoolFactory.sol:138"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeNumerator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:139"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeDenominator",
            "type": "t_uint256",
            "src": "contracts\\PoolFactory.sol:140"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5c0fad25c92296347d0b0e9d51b0f17aefa039430ab94ec17c069ae9b469a425": {
      "address": "0x378786f6d149380Fc7460c938D2Cb8C6F78aB936",
      "txHash": "0x57261aa504afe1ac125fb102e83019332e32fc14395e08c09d14932d153a23b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:131"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:135"
          },
          {
            "contract": "PoolFactory",
            "label": "poolPerformanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:138"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "contract": "PoolFactory",
            "label": "transferWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:142"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "5c0fad25c92296347d0b0e9d51b0f17aefa039430ab94ec17c069ae9b469a425sss": {
      "address": "0x4BE12Ff933C418b193B36180221Fb0033a63b3E2",
      "txHash": "0xc1bd078b7a7c9878b122855c70a2c0379b229b9e4a80c574562628740e746b12",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:131"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:135"
          },
          {
            "contract": "PoolFactory",
            "label": "poolPerformanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:138"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "contract": "PoolFactory",
            "label": "transferWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:142"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:145"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "f9649a958b6ca64af67aa6b3ab8d1d627351e1b493ecfaac02ded9417a9eae8b": {
      "address": "0x748083bf747e3537d692e26dc18cdf00efF4f7d7",
      "txHash": "0xee7d4585d77e3bf3bc6e4bbb7cf454ac18d4643a8b339488741ed0904c1500d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts/PoolLogic.sol:131"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:132"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:134"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:136"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:139"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/PoolLogic.sol:762"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0bf8ce0e690e01c57b45ea10e78e6806177e3254dcd2f0c53973cba1997ee1b5": {
      "address": "0x51583c1923eb0F338c88dE674A59aB3f05731Ea8",
      "txHash": "0xdb445cdbeef59cb065b1ecf5877cc677b7787f1cd62f01c802923ad91da52d3a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts/Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts/Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:71"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:72"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)21148_storage)dyn_storage",
            "src": "contracts/PoolManagerLogic.sol:74"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolManagerLogic.sol:75"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:78"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:79"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:80"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)21148_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)21148_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)51_storage": {
            "label": "uint256[51]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "982d7e37b1216617a2803b5b25ce9c3ef42f11f6de1e06cbede9e42cf539817c": {
      "address": "0x97967D1ec91d9104c4Fb4BFa0c6FBF6eC1e0F323",
      "txHash": "0xb7abba6f888b6ef5d6b838ba6e62998f2f5bf1591f82c8152a7b15933afd10e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "poolInitialized",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolPerformance.sol:71"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/PoolPerformance.sol:72"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolPerformance.sol:76"
          },
          {
            "contract": "PoolPerformance",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/PoolPerformance.sol:78"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a91d11589583ecfabd7c0038466841bb80694f4934b297050cb574831237ecd9": {
      "address": "0xdBFd8257f5921E09400Ac71892370dbB09AF5019",
      "txHash": "0xd8007fa3bfdc5fcedf329db47f504c47599d597d10b2c62d29bf97e7b90aa24f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts\\PoolLogic.sol:131"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:132"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:134"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:136"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts\\PoolLogic.sol:139"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts\\PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "0bc173167fdc1a9dae34a50bfe188d113e64798a74eb50844d23a0a7d2205adb": {
      "address": "0xc7556f18fE98Af87d3d82AC9ccb5967e087789fc",
      "txHash": "0x3a5316e7b6d61403508e131fa662778da0c95bb048480bba8fbef55e577181ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "poolInitialized",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolPerformance.sol:72"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/PoolPerformance.sol:73"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolPerformance.sol:77"
          },
          {
            "contract": "PoolPerformance",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/PoolPerformance.sol:79"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8a09b1a91fd37adc5be871d443123dac2c1452f56840ef2fa85612c41c7df62": {
      "address": "0x14A358dAc0a3d44F4E7c41F9D717d30335A28409",
      "txHash": "0xaed5c8963049e2d9c0b5aaffd0280afda5db9333e9bba2eae238c5a1529d3533",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "contract": "ProxyFactory",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "contract": "ProxyFactory",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "contract": "PoolFactory",
            "label": "deployedFunds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/PoolFactory.sol:112"
          },
          {
            "contract": "PoolFactory",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:114"
          },
          {
            "contract": "PoolFactory",
            "label": "governanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "contract": "PoolFactory",
            "label": "_assetHandler",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "contract": "PoolFactory",
            "label": "_daoFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "contract": "PoolFactory",
            "label": "isPool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:121"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "contract": "PoolFactory",
            "label": "_MANAGER_FEE_DENOMINATOR",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitCooldown",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:127"
          },
          {
            "contract": "PoolFactory",
            "label": "_maximumSupportedAssetCount",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "contract": "PoolFactory",
            "label": "poolVersion",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolFactory.sol:131"
          },
          {
            "contract": "PoolFactory",
            "label": "poolStorageVersion",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "contract": "PoolFactory",
            "label": "maximumPerformanceFeeNumeratorChange",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "contract": "PoolFactory",
            "label": "performanceFeeNumeratorChangeDelay",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:135"
          },
          {
            "contract": "PoolFactory",
            "label": "poolPerformanceAddress",
            "type": "t_address",
            "src": "contracts/PoolFactory.sol:138"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "contract": "PoolFactory",
            "label": "_exitFeeDenominator",
            "type": "t_uint256",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "contract": "PoolFactory",
            "label": "transferWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolFactory.sol:142"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "614af733d10fae4bb668bb2df38590510195afe44a0dc6df3efe376fbc321e8b": {
      "address": "0x969d8016c5e0Ab74525f238824ac50dfc1DaBb5c",
      "txHash": "0x4d601c6457ccf2755649308b2ae6c4df85bd5ae7d82c3cebcc66b02e5b64bd20",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:148"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:150"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:152"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "74e527bd1e59d8e015c280dfeb2fdbc273910b74383e6ca07331e4990d8a277c": {
      "address": "0x14954602f2BA9810dCfd830738E52534416125f0",
      "txHash": "0xffba909cc9d618554ccc1d8f7384e6ad1ce13ea0bd72acab94f74a555a81563a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:148"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:150"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:152"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "233724c647855b84fc6dd57710f694c09334d701e88f86da0b4e05f4578f886e": {
      "address": "0x5DDf53e8D9406583C49a85F0B918b1c7f0D0C875",
      "txHash": "0x5a40eee65f3244efc563ecb13ac80c118d981d4c8eb1f0756dc6105f90e63c79",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts/Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts/Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:81"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)28986_storage)dyn_storage",
            "src": "contracts/PoolManagerLogic.sol:84"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:88"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)28986_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)28986_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "7e3e11ee58d76708f8ce3c1d211e108220f1d229a0118b467c19ca6c4bc2c80e": {
      "address": "0x2Ddc472C27c4C82030870c0e6dbA513c13a60d8A",
      "txHash": "0x3b09cc0f00a2ec97998195461fc738336b65f85373b0e772c918c23e25391298",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts/Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts/Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)31311_storage)dyn_storage",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:492"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)31311_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)31311_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "a0e0ca3f89411d36b00ae1de874067b349597a59eaa2da452ce6f264e126466f": {
      "address": "0x0646Ca3508829eF13026231799aEf11510Eb1ff2",
      "txHash": "0xc7692acd6eae0df2dd47dffbba70b0f659d32f099125a20362e4b959d9331e15",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:113"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:116"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:133"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:135"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:136"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:141"
          },
          {
            "label": "transferWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:143"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:145"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "63823371c3ce6de9cddaea055b661e7473613302b7af69e9edd6a74ca7b12761": {
      "address": "0x4AD2B2487c6ac0D171663a2f97B530a94f8D51cE",
      "txHash": "0xb6bc63a10e68f5e5a05f81b7472ef1d4e3fea73b233f11d2f42e57223fa6d44b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:148"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:150"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:152"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f798f7c9c5a27cad2eabbabe32b569dc91a470c7198b247fc7111f3a7f8e0711": {
      "address": "0xd6798496f3a5025542b4c397F51852c0D6c10BfE",
      "txHash": "0xb5b53e855850ada7830abc1f477cfb7e604c3f2813398f87d59dc197ff7e5186",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts/Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts/Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)33490_storage)dyn_storage",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:494"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)33490_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)33490_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "182b7a28564480890835c73ebf3ce4cf2066bf3bc3b8545c53d8388aa0cdfb74": {
      "address": "0xC2e1AD74F82B71Fe0dC0002010567d2b3c4D5679",
      "txHash": "0x891e5e7bba466d34558f0ff9b937d03818043408e89ec7a11a21fe3189d3e73a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "PoolLogic",
            "label": "privatePool",
            "type": "t_bool",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "contract": "PoolLogic",
            "label": "creator",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:141"
          },
          {
            "contract": "PoolLogic",
            "label": "creationTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "contract": "PoolLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "contract": "PoolLogic",
            "label": "tokenPriceAtLastFeeMint",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:148"
          },
          {
            "contract": "PoolLogic",
            "label": "lastDeposit",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:150"
          },
          {
            "contract": "PoolLogic",
            "label": "poolManagerLogic",
            "type": "t_address",
            "src": "contracts/PoolLogic.sol:152"
          },
          {
            "contract": "PoolLogic",
            "label": "lastWhitelistTransfer",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolLogic.sol:154"
          },
          {
            "contract": "PoolLogic",
            "label": "lastFeeMintTime",
            "type": "t_uint256",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "885488784d8094943476b9412314048917d2117a83de10fabf749a42fc9bc711": {
      "address": "0xd1d97A508f2f79b398c36FDE0C600d7F29335D1b",
      "txHash": "0x7aa8d9d4a75530b2cd59132ab724a1d075305fa27f13aa1015693672ff3609cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Managed",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/Managed.sol:47"
          },
          {
            "contract": "Managed",
            "label": "managerName",
            "type": "t_string_storage",
            "src": "contracts/Managed.sol:48"
          },
          {
            "contract": "Managed",
            "label": "_memberList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/Managed.sol:50"
          },
          {
            "contract": "Managed",
            "label": "_memberPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Managed.sol:51"
          },
          {
            "contract": "Managed",
            "label": "trader",
            "type": "t_address",
            "src": "contracts/Managed.sol:53"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "factory",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "poolLogic",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "supportedAssets",
            "type": "t_array(t_struct(Asset)33515_storage)dyn_storage",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "assetPosition",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedPerformanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedFeeIncreaseTimestamp",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "performanceFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "announcedManagerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "managerFeeNumerator",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "nftMembershipCollectionAddress",
            "type": "t_address",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "minDepositUSD",
            "type": "t_uint256",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "contract": "PoolManagerLogic",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/PoolManagerLogic.sol:498"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Asset)33515_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]"
          },
          "t_struct(Asset)33515_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "isDeposit",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          }
        }
      }
    },
    "a8c6e8a27fb065ad818a1e5d0d8a153e0a058db486e1f56f73dc76db46bff3a0": {
      "address": "0xf589FE59D1944ADd8FFf49C3A96205732D948e75",
      "txHash": "0x15d407117610258c0d4ab770a32f4c19a7d991092d5eef1ecc38cb385f7d73aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "poolInitialized",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/PoolPerformance.sol:74"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalBalancesMap",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/PoolPerformance.sol:75"
          },
          {
            "contract": "PoolPerformance",
            "label": "internalValueFactorMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/PoolPerformance.sol:79"
          },
          {
            "contract": "PoolPerformance",
            "label": "enabled",
            "type": "t_bool",
            "src": "contracts/PoolPerformance.sol:81"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "635e168a5a72c5d269f83eb447bc067d533dc696e727a9e865ccb076ae7c1869": {
      "address": "0x8c61AeA9810fdc3ACbfB88932b674fafb4FB2E75",
      "txHash": "0x97e52c2f751cbfb959ffd81e74c5a3a68292a4af7deaf773e927699d25eafa1a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:136"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:137"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:143"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:144"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:145"
          },
          {
            "label": "customCooldownWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:147"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "41b85a181751697f3c98d0dba0f4980b27fd61382d860d56f0b15945752aec61": {
      "address": "0xcbfF33894EC304a33c091ddB1264a4d186623B42",
      "txHash": "0x10db679af82e889c93aa4cf0424eeedd39971fe920c3c16d4aa4a4aa0430cb3b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:155"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:156"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:158"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:160"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:163"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:165"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:167"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:169"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:171"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b312ab242a2e7d3b8f28ab2a8409fe61414dd669b3fad3c8bf34911ebb7bc5e": {
      "address": "0x9D6d5b533caf5A622856484Dd7eac0834db011d6",
      "txHash": "0xd290d7e9334721f56913b8f0d580feffc39ab172fb5571435baaef3d87aeb627",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)36604_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)48_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:508"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)36604_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)36604_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9ebb46f7dd838da5ae9d12ae9e162ef660c45a173812d0349aaa77ba51362e6e": {
      "address": "0x62ed2480BD4a16AEc8Dc560d822b2D8Cee05e544",
      "txHash": "0xfa1dadfa21a674bf87bf5ab91da3d64b7274a7a4773c6d2887240a3450f873d3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:45"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "102",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:46"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:47"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:48"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:50"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:51"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(WithdrawProps)3600_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1221": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)5484": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)5538": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router)5690": {
            "label": "contract IUniswapV2Router",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)5738": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3607_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)5538",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)5484",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3600_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)5738",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType2Router",
                "type": "t_contract(IUniswapV2Router)5690",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetType5Router",
                "type": "t_contract(IUniswapV2Router)5690",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3607_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6991a125821cf33db34c1325df877ec88528771fb2c86412bc57191dc64a3a36": {
      "address": "0xe23c118096Ab1DBaF7f37720A4E57Cc1AD8Ce48C",
      "txHash": "0x74914eb1d7952cdc598f888d9a9885ef2a849e223dd5f20cd0340e22850a2fd6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:45"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "102",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:46"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:47"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:48"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:50"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:51"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(WithdrawProps)3719_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts\\EasySwapper\\DhedgeEasySwapper.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1221": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)5818": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)5872": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router)6024": {
            "label": "contract IUniswapV2Router",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)6072": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3726_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)5872",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)5818",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3719_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)6072",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType2Router",
                "type": "t_contract(IUniswapV2Router)6024",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetType5Router",
                "type": "t_contract(IUniswapV2Router)6024",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3726_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "28eaa117a6bc14303aba84588ee6781b84327832a5fea378e14583d6f88f304b": {
      "address": "0x734c8959f27a6129cE57e04d03C9d37e365E993f",
      "txHash": "0xa15359442f8b66f1f08f499f86f1bceb83c6c0ab0544d9c989e5c5f54050e4ac",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:160"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:161"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:163"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:165"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:168"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:170"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:172"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:174"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:176"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f56d88d5a5920330260335af6951163e8f36336dc1317c46e13ea64f825b9c89": {
      "address": "0x10195b4E9Fc590c363517630Ef877921CB37073d",
      "txHash": "0x9e197a3dfc614ebe45c5f106c3c58f338cac7aba75bef44a839376cd416bb647",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:46"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "102",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:47"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:49"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:51"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:52"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(WithdrawProps)16974_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)7405": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)38812": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)38866": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router)39071": {
            "label": "contract IUniswapV2Router",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)39119": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)16981_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)38866",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20)7405",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)38812",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)16974_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)39119",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType2Router",
                "type": "t_contract(IUniswapV2Router)39071",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetType5Router",
                "type": "t_contract(IUniswapV2Router)39071",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)16981_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20)7405",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20)7405",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e5d40a70a7d462383e9445030aac91fa2a977e8f83f61ef4c17eefe1645f9d70": {
      "address": "0x991a8A030b4feE8950dD070aBc0C686046d3C690",
      "txHash": "0xf2d731e5757ad6266eb8f16a029f534836666880e744aa9070082a21bc3280e3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)37349_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)48_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:511"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)37349_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)37349_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "ced810782ad24937d71b0a07298e8e9d83e3b15f7aa88f55b572c1cb02ba79ad": {
      "address": "0x8D0e66e70c657da8ED33815Dfb1dac5b27e7a46c",
      "txHash": "0x9513bec70f025fae8cb843c455ebadf2b42b8bc31f82f9ff6072a283d21534d4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:46"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "102",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:47"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:49"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:51"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:52"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(WithdrawProps)3657_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1221": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)5667": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)5721": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router)5873": {
            "label": "contract IUniswapV2Router",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)5921": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3664_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)5721",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)5667",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3657_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)5921",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType2Router",
                "type": "t_contract(IUniswapV2Router)5873",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetType5Router",
                "type": "t_contract(IUniswapV2Router)5873",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3664_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20)1221",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "12e18e2038bc801d4f43114091f512f1849068ff0a8cca4dceb5d16821fc7ef9": {
      "address": "0x2D88289CD875788DF5c3f98D151BFcc2f87e6e9B",
      "txHash": "0x0cfb3c9eadfab67af186df8b97160aa1bc2273dc0403dd580243e667707caba1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:136"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:137"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:143"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:144"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:145"
          },
          {
            "label": "customCooldownWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:148"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9698bc37e40cd500e2af78c3e09e23fe999e8462fc3133a31c43c771a59f96aa": {
      "address": "0xb61775Fc9B38282bd34b6E19B4c82Ae06251E982",
      "txHash": "0xbece2230a3effeb7c547949c5ba37582ff2c9b19d894f8920c21da82d7a1ff4a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:160"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:161"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:163"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:165"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:168"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:170"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:172"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:174"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:176"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:831"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5f36f0a4a6e5090e23775465a446bb1c727e066565a14add535d9b2def9b515d": {
      "address": "0xC966551ef07d634Be0EFBCDA5Ff70E3Af8CA1B16",
      "txHash": "0x0a6360753a0189d7079bcbd5ca567d39cb11ac995d8c9882075bb0aa0d51b132",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:49"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:52"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:54"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)44969_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:56"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)44962_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:59"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:61"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:64"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:66"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:69"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:75"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:77"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:79"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)44984_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:81"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "172",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "176",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "177",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "179",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "180",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "221",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)44969_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)44962_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)44969_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)44984_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)44962_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9f8e0b612c6584c1bf0ce08e00d125065568ef24361cf89c50973b7cdfcedb48": {
      "address": "0x697a841c5408f32B33C3A09480D795b96E338b9E",
      "txHash": "0xf3611a28e3e2f7fa724fb8afa6bfcd34ede39a015ebb6dd6e3e8883871722c78",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:49"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:52"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:54"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)44986_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:56"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)44979_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:59"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:61"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:64"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:66"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:69"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:75"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:77"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:79"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45001_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:81"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "172",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "176",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "177",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "179",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "180",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "221",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)44986_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)44979_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)44986_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45001_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)44979_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "79ec1774c6f92e1d0a3f965d350aa1c4558eea7eddabae9cd06ef8c830c55009": {
      "address": "0x638acA53C0Af04274A5f67189acb229F33C91FEC",
      "txHash": "0xb575a50615d99ba2ebd9bf9add4cc0b8113ad4eaa19dc821145ea127339a6f42",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:49"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:52"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:54"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)44986_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:56"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)44979_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:59"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:61"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:64"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:66"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:69"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:75"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:77"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:79"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45001_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:81"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "172",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "176",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "177",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "179",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "180",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "221",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)44986_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)44979_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)44986_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45001_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)44979_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4f72123c3fb08237c525916caa4ea8d55d16c8b65cb7992b399cdc921a24c88b": {
      "address": "0x4659529cf72fEE6da377CB856699bcb0A548d6D4",
      "txHash": "0x0af1d3951c4bd1e2bbf7f559a131238933dc49171c8e62c9a8e5b4619b716252",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:49"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:52"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:54"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)45047_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:56"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)45040_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:59"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:61"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:64"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:66"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:69"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:75"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:77"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:79"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45062_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:81"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "172",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "176",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "177",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "179",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "180",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "221",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)45047_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)45040_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)45047_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45062_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)45040_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a7b8a86a2ee7e2e724ca09ceb0720ef2581251aaabe1ba9afb8464a3182f5ce1": {
      "address": "0x854A6BF79c7B30c49F6d529128050D9578CA05C3",
      "txHash": "0x375b580c40ed34601b03db38582e4b8c38c75128cf6f8dcfaac74abe2b9dffd3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:49"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:52"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:54"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)45062_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:56"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)45055_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:59"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:61"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:64"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:66"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:69"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:75"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:77"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:79"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45077_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts\\stakingv2\\DhedgeStakingV2Storage.sol:81"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "172",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "176",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "177",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "178",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "179",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "180",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "221",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "222",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)45062_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)45055_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)45062_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45077_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)45055_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c91fad38f40797f42d0b274e772ab1bc391e05d0b02b5b5d47adf6fc5212b3fb": {
      "address": "0x0d7e16d3Ca16F2f2f9fd9784c26a0d5E4854B624",
      "txHash": "0x19f377a31e5fcc7231f46d93e6d96bee1422830e07426d61cb02c0783636152e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:50"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:53"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:55"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)7139_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)7132_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:60"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)2394_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:62"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:65"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:67"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:71"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:76"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:78"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:80"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)7154_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:82"
          },
          {
            "label": "tokenUriGenerator",
            "offset": 0,
            "slot": "121",
            "type": "t_contract(IDhedgeStakingV2NFTJson)7105",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:86"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_struct(UintSet)3391_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "223",
            "type": "t_struct(UintToAddressMap)2768_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "227",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "228",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "229",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "230",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "231",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)2442_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDhedgeStakingV2NFTJson)7105": {
            "label": "contract IDhedgeStakingV2NFTJson",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)7139_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)3391_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)7132_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2394_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)2450_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2442_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)2442_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)7139_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)7154_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)3005_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)7132_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)3391_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3005_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)2768_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2450_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1f2ee60492647ed97e9dae5a742d167af8d6b095925393462ed6a02d4688501e": {
      "address": "0x21364179eBD97158b0135b2cd86B6611Cf75ed3C",
      "txHash": "0xd38512267e96eb5efcc4491a5976623ef1e615cb8ce8b0b214875e3993b2d6eb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:50"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:53"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:55"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)45424_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)45417_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:60"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:62"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:65"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:67"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:71"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:76"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:78"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:80"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45439_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:82"
          },
          {
            "label": "tokenUriGenerator",
            "offset": 0,
            "slot": "121",
            "type": "t_contract(IDhedgeStakingV2NFTJson)45390",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:86"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "223",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "227",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "228",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "229",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "230",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "231",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDhedgeStakingV2NFTJson)45390": {
            "label": "contract IDhedgeStakingV2NFTJson",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)45424_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)45417_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)45424_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45439_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)45417_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "707343bc19d14c8477b602b725e80fc925161ecf3f48bbd5add0131958107dca": {
      "address": "0x1eeFA089C5e5eB347A84428c6C3f2D34c6d311a3",
      "txHash": "0x373a6497db30f2d187cbbb24a369835296fd6cdfb49ad8fadb6910f641a51363",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:50"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:53"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:55"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)45501_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)45494_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:60"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:62"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:65"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:67"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:71"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:76"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:78"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:80"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45516_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:82"
          },
          {
            "label": "tokenUriGenerator",
            "offset": 0,
            "slot": "121",
            "type": "t_contract(IDhedgeStakingV2NFTJson)45467",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:86"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "223",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "227",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "228",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "229",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "230",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "231",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDhedgeStakingV2NFTJson)45467": {
            "label": "contract IDhedgeStakingV2NFTJson",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)45501_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)45494_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)45501_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45516_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)45494_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d31ab236a4ddcbd9d95e4ddf6e388a10c84c342af613fe4445b323a686368e1d": {
      "address": "0x55fc12A74aF23fe3B59813aB301fA3910ab04d5E",
      "txHash": "0x85b7d7af0e90ee64133791b17e1d1afef32143f316fb2a300d736262f07341a8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:50"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:53"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:55"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)45523_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)45516_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:60"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:62"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:65"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:67"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:71"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:76"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:78"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:80"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)45538_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:82"
          },
          {
            "label": "tokenUriGenerator",
            "offset": 0,
            "slot": "121",
            "type": "t_contract(IDhedgeStakingV2NFTJson)45485",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:86"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "223",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "227",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "228",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "229",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "230",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "231",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDhedgeStakingV2NFTJson)45485": {
            "label": "contract IDhedgeStakingV2NFTJson",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)45523_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)45516_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)45523_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)45538_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)45516_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stakeFinishTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "vdhtAccruedAtUnstake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "24f3f46ca19305189f39a2d303d1d37ebd151ff450a43e89c5ca9837ddd0fcab": {
      "address": "0x37F2873a7ca00AB1a6E4B37736E3CC76E98758C1",
      "txHash": "0x573b27fda832b1a3fdd8b81b5b2046aca27a31c3372e8fc39d63442ba039ef79",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:50"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:53"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:55"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)46414_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:57"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)46407_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:60"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:62"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:65"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:67"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:70"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:71"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:76"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:78"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:80"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)46429_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:82"
          },
          {
            "label": "tokenUriGenerator",
            "offset": 0,
            "slot": "121",
            "type": "t_contract(IDhedgeStakingV2NFTJson)46374",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:86"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "223",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "227",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "228",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "229",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "230",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "231",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDhedgeStakingV2NFTJson)46374": {
            "label": "contract IDhedgeStakingV2NFTJson",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)46414_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)46407_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)46414_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)46429_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)46407_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stakeFinishTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "vdhtAccruedAtUnstake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "dhedgePoolRemainingExitCooldownAtStakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f5cf0c73a1b86cbd9ff96c83988b088582332e0af55510906f6a7b7de0f48d28": {
      "address": "0x8De28a3446007D856CB75f14F07F1fF7eCa040D6",
      "txHash": "0x4c2ac8703b2bba092bd9b7b5a79de437bd716ba39636856aa4d676d89a65895a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:117"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:136"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:137"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:143"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:144"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:145"
          },
          {
            "label": "customCooldownWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:148"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:150"
          },
          {
            "label": "receiverWhitelist",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:153"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "d38ffe8d9682c6a921538da5e2831018b50db2b228f6dc93433d9dd48d4d1a42": {
      "address": "0x5B66f3317b820c904362696429D2eb6D1727757a",
      "txHash": "0x308e6f50634d658c9d91d6828b40507ee1d1b358e05da927f0c9a5a87ee70ced",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:160"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:161"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:163"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:165"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:168"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:170"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:172"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:174"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:176"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:835"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a6327f5c470d9811016aadb890f8e342d377009a1e3a144a82cbdbc8f4ed38e1": {
      "address": "0x65a5FFEB4DF6f5d39f706A5d4FC1f3835A63e18c",
      "txHash": "0x921341a8b453e0990ec7da7058db07f7e7e82eda6d78d2aa63369b85ed1e1bbf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:165"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:166"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:168"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:170"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:173"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:175"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:177"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:179"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:181"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:183"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:861"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d2acb3c16d5e9449f62d6ba6381a2ebf78f6c30b6c6b1784a502393049edff0b": {
      "address": "0x4BD68633193950cc8D4776C61a9E8ea479136a7A",
      "txHash": "0xb2feb7834c2a8c9dcd69b62ada8cfea33dd42561fba1f1b2fdf042b03b72efbc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:43"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "102",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:44"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:45"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:46"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:49"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(WithdrawProps)3536_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Extended)7682": {
            "label": "contract IERC20Extended",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)9265": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)9319": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router)9480": {
            "label": "contract IUniswapV2Router",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)9528": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3543_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)9319",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20Extended)7682",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)9265",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3536_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)9528",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType2Router",
                "type": "t_contract(IUniswapV2Router)9480",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetType5Router",
                "type": "t_contract(IUniswapV2Router)9480",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3543_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20Extended)7682",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20Extended)7682",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4a7d730b7ab84b354048ffec85845a4c7523c599076152f0acf27efa1d7b2810": {
      "address": "0x47305769361c67d3F5f5513184C37fb7F88AA2B7",
      "txHash": "0x119a4fb5131eb4bb495c29016ee9d4c2489161e31ea07702f958a808bcf7214a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)5064_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)48_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:513"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)5064_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)5064_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "087c4fa19c7a101f82e488a409d6216000b5c8991f417037156a1f8d0a5528d0": {
      "address": "0x6Dd6aAA700a08157B43E0c324c021bFdc19CdC37",
      "txHash": "0xe817dba9dd96781302eed8162047e6177075eca486147f3c042aed2191634e2a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:82"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:83"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)43243_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "15",
            "type": "t_array(t_uint256)48_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:514"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)43243_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)43243_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "104e80ca626e2b0284b8f82366f303db70a38346a787ce20becd5fd1e4065f29": {
      "address": "0x088DeB850d82603243E257DD1cBc05c5D838a28D",
      "txHash": "0x26aaec6660e608475e157cea81c123de46d9d42aefa6a5028988054a86b12cd9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:166"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:167"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:169"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:171"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:174"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:176"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:178"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:180"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:182"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:184"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:872"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a55ef747676acfe55b343d589f171cb0f503c36bd5fa636d48691251e5a7f298": {
      "address": "0xa084F8Ef51Cf8728FE712C2E719a95a82623D199",
      "txHash": "0x8a79a0e8eb6603bdf6452a4dac4ce1af618b93e1d9800bc0d7135f4dfe530f28",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:84"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)43879_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:87"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:88"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:91"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:94"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:95"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:98"
          },
          {
            "label": "minDepositUSD",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "16",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:532"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)43879_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)43879_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "f6847bad913dcee0d7e908d46dc46fad29df12a1213d2bd31cdf36bcad3fe2d0": {
      "address": "0xA5e199e7b70bcbC41C075f4388Da38E27b6F480C",
      "txHash": "0x2df2a2a49d465560986281d8a2b9b1b8c65135c2d9140affbc3272e40c5d8d0c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "dhtAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:52"
          },
          {
            "label": "numberOfPoolsConfigured",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:55"
          },
          {
            "label": "poolConfiguredByIndex",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:57"
          },
          {
            "label": "poolConfiguration",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_struct(PoolConfiguration)54403_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:59"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_struct(Stake)54396_storage)",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:62"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Counter)4373_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:64"
          },
          {
            "label": "totalStakingValue",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:67"
          },
          {
            "label": "dhtRewarded",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:69"
          },
          {
            "label": "dhtStaked",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:72"
          },
          {
            "label": "aggregateStakeStartTime",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:73"
          },
          {
            "label": "dhtCap",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:78"
          },
          {
            "label": "maxVDurationTimeSeconds",
            "offset": 0,
            "slot": "112",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:80"
          },
          {
            "label": "rewardStreamingTime",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:82"
          },
          {
            "label": "rewardParams",
            "offset": 0,
            "slot": "114",
            "type": "t_struct(RewardParams)54418_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:84"
          },
          {
            "label": "tokenUriGenerator",
            "offset": 0,
            "slot": "121",
            "type": "t_contract(IDhedgeStakingV2NFTJson)54363",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "DhedgeStakingV2Storage",
            "src": "contracts/stakingv2/DhedgeStakingV2Storage.sol:88"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "222",
            "type": "t_mapping(t_address,t_struct(UintSet)5370_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "223",
            "type": "t_struct(UintToAddressMap)4747_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "227",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "228",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "229",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "230",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "231",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "322",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "323",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)4421_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IDhedgeStakingV2NFTJson)54363": {
            "label": "contract IDhedgeStakingV2NFTJson",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolConfiguration)54403_storage)": {
            "label": "mapping(address => struct IDhedgeStakingV2Storage.PoolConfiguration)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5370_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)54396_storage)": {
            "label": "mapping(uint256 => struct IDhedgeStakingV2Storage.Stake)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4373_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)4429_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)4421_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)4421_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PoolConfiguration)54403_storage": {
            "label": "struct IDhedgeStakingV2Storage.PoolConfiguration",
            "members": [
              {
                "label": "configured",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakeCap",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakedSoFar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardParams)54418_storage": {
            "label": "struct IDhedgeStakingV2Storage.RewardParams",
            "members": [
              {
                "label": "stakeDurationDelaySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxDurationBoostSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxPerformanceBoostNumerator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPerformanceBoostDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakingRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "emissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "emissionsRateDenominator",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(Set)4984_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)54396_storage": {
            "label": "struct IDhedgeStakingV2Storage.Stake",
            "members": [
              {
                "label": "dhtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dhtStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dhedgePoolAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "dhedgePoolAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "dhedgePoolStakeStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "stakeStartTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstaked",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "unstakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "claimedReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "rewardParamsEmissionsRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stakeFinishTokenPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "vdhtAccruedAtUnstake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "dhedgePoolRemainingExitCooldownAtStakeTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_struct(UintSet)5370_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4984_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)4747_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)4429_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "884453c4bc426062ad79525675416a1fbaed5754e18cb8f9dc4e792436700892": {
      "address": "0xdea23A4Ab703D65a1bE138951aaB8fe36a9EB3Fb",
      "txHash": "0x295f192e77af6bc3a42fba731e3132027a596671bd7a7dd019bbe54629e15ec0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:43"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "102",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:44"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:45"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:46"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:49"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(WithdrawProps)3541_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Extended)7797": {
            "label": "contract IERC20Extended",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)9436": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)9490": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router)9651": {
            "label": "contract IUniswapV2Router",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)9699": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3548_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)9490",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20Extended)7797",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)9436",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3541_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)9699",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetType2Router",
                "type": "t_contract(IUniswapV2Router)9651",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetType5Router",
                "type": "t_contract(IUniswapV2Router)9651",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3548_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20Extended)7797",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20Extended)7797",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "6dbf23439fc210eda7901164f658e6821ebbad38e7488fa54dd87e6978cc264a": {
      "address": "0x3D37AA46491e43c41B39F25D8b5b1a6B015583F7",
      "txHash": "0xe58f6a7297709bee71fd98e63beca3d69b9a8cfb5d114c12aefa42918c5d34fd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeNftTrackerStorage",
            "src": "contracts/utils/tracker/DhedgeNftTrackerStorage.sol:10"
          },
          {
            "label": "_nftTrackData",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_array(t_bytes_storage)dyn_storage))",
            "contract": "DhedgeNftTrackerStorage",
            "src": "contracts/utils/tracker/DhedgeNftTrackerStorage.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(address => bytes[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_array(t_bytes_storage)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(address => bytes[]))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "56b147a642d6f03dbdcb72a182697166ffb48e7bc3b99a1f2fc29ed56a84f164": {
      "address": "0x165F9FBFBB778fd69d0ef598B95Aed96d78c4316",
      "txHash": "0x3da03823f6053a77a85398518c984d13b973187bf716d8107fcf2da171041cee",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "101",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:43"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:44"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:45"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:47"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(WithdrawProps)17711_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Extended)45175": {
            "label": "contract IERC20Extended",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)47876": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)47930": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)48192": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)17718_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)47930",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20Extended)45175",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)47876",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)17711_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)48192",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)17718_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20Extended)45175",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20Extended)45175",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7b5ab7ee9553efa464fa168b3c2b097b547123a712b7d891c834df27f0854511": {
      "address": "0xd864ac022E1A1321678352ef6a232f5480C94dB1",
      "txHash": "0xf291d4e07cedd8c48bbce9a825f34aebae9c8416ca027104a7279d266643e41f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:113"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:115"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:116"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:119"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:122"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:133"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:135"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:136"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:139"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:141"
          },
          {
            "label": "customCooldownWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:144"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:146"
          },
          {
            "label": "receiverWhitelist",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "acb0da8aab3918c0b1db28fabbc887f79fc26ffb8a5f40e3e5eb1ff1186f8615": {
      "address": "0xC89Bb4aCc92C7A302d6f93F42371488d90d0D77b",
      "txHash": "0xf7df589d5903715c976661e8e459805422ea273f7abff6731e8c8deefeddfa4a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:134"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:135"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:137"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:139"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:142"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:144"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:146"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:148"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:150"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:152"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:819"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2cef9ce9f75231c5f3a047a395f0695f406d1093718f482db436a7d94c79032e": {
      "address": "0xB5cb59232f645BDC534A0176b190249F0B772ede",
      "txHash": "0xebd5d75ce33c72289cc685bcaca9c90a545848fc96fed3d381d5c70364ce2183",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "101",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:43"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:44"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:45"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:47"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(WithdrawProps)3633_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Extended)7945": {
            "label": "contract IERC20Extended",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)9679": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)9733": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)9942": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3640_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)9733",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20Extended)7945",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)9679",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3633_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)9942",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3640_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20Extended)7945",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20Extended)7945",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e66e21dd15ff1c852f78b38e87586bf4ee498f616173e578a05db662a5433508": {
      "address": "0x93127FeE7DCafeC3e04c40B2C05a582827C84e65",
      "txHash": "0x7ddaf613f6402f8b716abccb4342c36a17ec1db5dc9a420847a58c342c0a2d92",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolFactory",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "DhedgeNftTrackerStorage",
            "src": "contracts/utils/tracker/DhedgeNftTrackerStorage.sol:10"
          },
          {
            "label": "_nftTrackData",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_array(t_bytes_storage)dyn_storage))",
            "contract": "DhedgeNftTrackerStorage",
            "src": "contracts/utils/tracker/DhedgeNftTrackerStorage.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(address => bytes[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_array(t_bytes_storage)dyn_storage))": {
            "label": "mapping(bytes32 => mapping(address => bytes[]))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9fd35564d34d71c9cedb65ac8b28099ee26d1a01c66aa00adede16d9f8dd8374": {
      "address": "0x546EB4e8449E2504614530FFFaCdEbe2111b0AEa",
      "txHash": "0x691e963f4788565976c419bd9f4365ccad7591e05c69d15345a2bc4412579a93",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:118"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:120"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:121"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:124"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:127"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:131"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:133"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:135"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:137"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:138"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:141"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:144"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:145"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:146"
          },
          {
            "label": "customCooldownWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:149"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:151"
          },
          {
            "label": "receiverWhitelist",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:154"
          },
          {
            "label": "maximumEntryFeeNumerator",
            "offset": 0,
            "slot": "224",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:156"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "4d04dd378b377dffa461cfe7d63ebf3069f9a0b419af35d73c7b49d776fc473c": {
      "address": "0xB56Ad04F1c86f00E2F799b0F657BAe1669cccB41",
      "txHash": "0xf2dc13f95e2d422342ed59d973dfe5d50d259c3981a0399e7425c5453115d5a0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:135"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:136"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:138"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:147"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:149"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:151"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:153"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:833"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "50e0bc47a21e35ac0d393132fe1d7eee0a92926ae9098a191b23640d72695a6b": {
      "address": "0x94a45eBCcf2996e95b8f82D4AD8098f1EfA1356A",
      "txHash": "0x5b60eab68274bafafca41b2017e49d0e67c16f116379adf82ce9d7dffb67a892",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:85"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)48589_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:88"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:92"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:94"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:95"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:99"
          },
          {
            "label": "minDepositUSD",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:101"
          },
          {
            "label": "announcedEntryFeeNumerator",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:103"
          },
          {
            "label": "entryFeeNumerator",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:104"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "18",
            "type": "t_array(t_uint256)45_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:583"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)48589_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)48589_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7682f086bc472ac2188a54f1d738888fd73d5957e3ec0bb1f1dd09ab2db4d718": {
      "address": "0xF7F631DBB3c8f82d27B6C23524FAF2822A4BFc37",
      "txHash": "0xd8811badd802bb9a2590269fd76ea0bfdddf8eae73dde8fb16574aa6a546c686",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "feeSink",
            "offset": 0,
            "slot": "101",
            "type": "t_address_payable",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:43"
          },
          {
            "label": "feeNumerator",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:44"
          },
          {
            "label": "feeDenominator",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:45"
          },
          {
            "label": "allowedPools",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:47"
          },
          {
            "label": "managerFeeBypass",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:48"
          },
          {
            "label": "withdrawProps",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(WithdrawProps)3475_storage",
            "contract": "DhedgeEasySwapper",
            "src": "contracts/EasySwapper/DhedgeEasySwapper.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Extended)7890": {
            "label": "contract IERC20Extended",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthAddressProxy)9672": {
            "label": "contract ISynthAddressProxy",
            "numberOfBytes": "20"
          },
          "t_contract(ISynthetix)9726": {
            "label": "contract ISynthetix",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2RouterSwapOnly)9935": {
            "label": "contract IUniswapV2RouterSwapOnly",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(SynthetixProps)3482_storage": {
            "label": "struct EasySwapperStructs.SynthetixProps",
            "members": [
              {
                "label": "snxProxy",
                "type": "t_contract(ISynthetix)9726",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapSUSDToAsset",
                "type": "t_contract(IERC20Extended)7890",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sUSDProxy",
                "type": "t_contract(ISynthAddressProxy)9672",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(WithdrawProps)3475_storage": {
            "label": "struct EasySwapperStructs.WithdrawProps",
            "members": [
              {
                "label": "swapRouter",
                "type": "t_contract(IUniswapV2RouterSwapOnly)9935",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "synthetixProps",
                "type": "t_struct(SynthetixProps)3482_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "weth",
                "type": "t_contract(IERC20Extended)7890",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "nativeAssetWrapper",
                "type": "t_contract(IERC20Extended)7890",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "969ac322c648a0c2d9d3809a6c28cd7226907b7435c989662f88581d642fadb4": {
      "address": "0x6858d1bdf033F29e2609c878580c70E9339fe9E2",
      "txHash": "0x8da50c862f788b0d677e5362dfedf7311b2cb74f7946ce276677af3a40642c9a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:45"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ProxyFactory",
            "src": "contracts/upgradability/ProxyFactory.sol:111"
          },
          {
            "label": "deployedFunds",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:123"
          },
          {
            "label": "daoAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:125"
          },
          {
            "label": "governanceAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:126"
          },
          {
            "label": "_assetHandler",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:128"
          },
          {
            "label": "_daoFeeNumerator",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:129"
          },
          {
            "label": "_daoFeeDenominator",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:130"
          },
          {
            "label": "isPool",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:132"
          },
          {
            "label": "maximumPerformanceFeeNumerator",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:134"
          },
          {
            "label": "_MANAGER_FEE_DENOMINATOR",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:136"
          },
          {
            "label": "_exitCooldown",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:138"
          },
          {
            "label": "_maximumSupportedAssetCount",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:140"
          },
          {
            "label": "poolVersion",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:142"
          },
          {
            "label": "poolStorageVersion",
            "offset": 0,
            "slot": "215",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:143"
          },
          {
            "label": "maximumPerformanceFeeNumeratorChange",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:145"
          },
          {
            "label": "performanceFeeNumeratorChangeDelay",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:146"
          },
          {
            "label": "poolPerformanceAddress",
            "offset": 0,
            "slot": "218",
            "type": "t_address",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:149"
          },
          {
            "label": "_exitFeeNumerator",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:150"
          },
          {
            "label": "_exitFeeDenominator",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:151"
          },
          {
            "label": "customCooldownWhitelist",
            "offset": 0,
            "slot": "221",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:154"
          },
          {
            "label": "maximumManagerFeeNumerator",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:156"
          },
          {
            "label": "receiverWhitelist",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:159"
          },
          {
            "label": "maximumEntryFeeNumerator",
            "offset": 0,
            "slot": "224",
            "type": "t_uint256",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:161"
          },
          {
            "label": "pausedPools",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolFactory",
            "src": "contracts/PoolFactory.sol:163"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c09f2c977921746a63713dba3be220a6772955de20930758df16f1135833d2f3": {
      "address": "0x0C1cCd956dC8E338008a6F4F4c27902a3B15d5F4",
      "txHash": "0x16070b2e2bb05d92b60e2c46636d0863c7444e2a888f29ba22471afa75f6aa16",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:135"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:136"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:138"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:143"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:147"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:149"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:151"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:153"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:861"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aa464436424bb7f0110e47c70dafcc116d44a31c99ed83cdffc1d0ad317ac7e6": {
      "address": "0xB66CF2a4Fe9B1FbE09b03CF28B8893C83B79e177",
      "txHash": "0xbd7f5414222f8780ce92377110a2151cf1642464e1d93bf07ab985d4d9b945df",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "56",
            "type": "t_uint8",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "privatePool",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:137"
          },
          {
            "label": "creator",
            "offset": 1,
            "slot": "151",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:138"
          },
          {
            "label": "creationTime",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:140"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:142"
          },
          {
            "label": "tokenPriceAtLastFeeMint",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:145"
          },
          {
            "label": "lastDeposit",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:147"
          },
          {
            "label": "poolManagerLogic",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:149"
          },
          {
            "label": "lastWhitelistTransfer",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:151"
          },
          {
            "label": "lastFeeMintTime",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:153"
          },
          {
            "label": "lastExitCooldown",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:155"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)47_storage",
            "contract": "PoolLogic",
            "src": "contracts/PoolLogic.sol:886"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "064e67178ef840de03fdd4b72d6d536ae9a789fe50921cb7de104b215587891d": {
      "address": "0x294665F184189d75d55343CEAE7F6E07c2Ef7544",
      "txHash": "0x955a1b206f4d275a6eb68d96131a911b417c6cd7548f572fd0fa35464e728ea0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "label": "manager",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:47"
          },
          {
            "label": "managerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:48"
          },
          {
            "label": "_memberList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Managed",
            "src": "contracts/Managed.sol:50"
          },
          {
            "label": "_memberPosition",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Managed",
            "src": "contracts/Managed.sol:51"
          },
          {
            "label": "trader",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "Managed",
            "src": "contracts/Managed.sol:53"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:86"
          },
          {
            "label": "poolLogic",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:87"
          },
          {
            "label": "supportedAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_struct(Asset)47269_storage)dyn_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:89"
          },
          {
            "label": "assetPosition",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:90"
          },
          {
            "label": "announcedPerformanceFeeNumerator",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:93"
          },
          {
            "label": "announcedFeeIncreaseTimestamp",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:94"
          },
          {
            "label": "performanceFeeNumerator",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:95"
          },
          {
            "label": "announcedManagerFeeNumerator",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:96"
          },
          {
            "label": "managerFeeNumerator",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:97"
          },
          {
            "label": "nftMembershipCollectionAddress",
            "offset": 0,
            "slot": "14",
            "type": "t_address",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:100"
          },
          {
            "label": "minDepositUSD",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:102"
          },
          {
            "label": "announcedEntryFeeNumerator",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:104"
          },
          {
            "label": "entryFeeNumerator",
            "offset": 0,
            "slot": "17",
            "type": "t_uint256",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:105"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "18",
            "type": "t_array(t_uint256)45_storage",
            "contract": "PoolManagerLogic",
            "src": "contracts/PoolManagerLogic.sol:602"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Asset)47269_storage)dyn_storage": {
            "label": "struct IHasSupportedAsset.Asset[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Asset)47269_storage": {
            "label": "struct IHasSupportedAsset.Asset",
            "members": [
              {
                "label": "asset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isDeposit",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
